import React from 'react';
import { Rotate as Hamburger, Rotate } from 'hamburger-react';
import { useState, useRef, useEffect } from 'react';
import { useTranslation } from 'react-i18next';

const Header = () => {
  const { t, i18n } = useTranslation();
  const listNavItems = ['services', 'contacts'];
  const [visibleSelect, setVisibleSelect] = useState(false);
  const rootEl = useRef(null);
  const [isOpen, setOpen] = useState(false);
  const stylesSelect = [
    ' text-center absolute left-0 top-10 bg-white p-2 rounded-lg w-full',
    'hidden opacity-0',
  ];
  if (visibleSelect) {
    stylesSelect[1] = 'visible opacity-100';
  } else {
  }

  useEffect(() => {
    const onClick = e => {
      if (!rootEl.current.contains(e.target)) {
        setVisibleSelect(false);
      }
    };
    document.addEventListener('click', onClick);
    return () => document.removeEventListener('click', onClick);
  }, []);

  const arrMenuStyles = [
    'transition-transform absolute w-[100vw] md:translate-x-0 top-[-30px] left-0 justify-center align-middle flex-col bg-brown text-center h-[100vh] md:static md:w-auto md:bg-transparent md:h-auto md:flex-row md:w-auto flex items-center',
  ];

  if (isOpen) {
    arrMenuStyles.push('translate-x-0');
    console.log(arrMenuStyles);
  } else {
    arrMenuStyles.push('translate-x-full');
    console.log(arrMenuStyles);
  }

  const changeLanguage = (language) => {
    i18n.changeLanguage(language);
  };


  console.log(t)

  return (
    <header className="2xl:container z-50 w-full absolute top-0 left-1/2 translate-x-[-50%] py-[30px]">
      <div className="relative mx-auto px-[30px] md:px-[50px]">
        <div className=" flex items-center justify-between">
          <a href="#" className="pr-[30px]">
            <svg width="146" height="29" fill="none">
              <rect x="0.5" y="0.5" width="145" height="28" stroke="white" />
              <path
                d="M17.7727 13H16.3636C16.2803 12.5947 16.1345 12.2386 15.9261 11.9318C15.7216 11.625 15.4716 11.3674 15.1761 11.1591C14.8845 10.947 14.5606 10.7879 14.2045 10.6818C13.8485 10.5758 13.4773 10.5227 13.0909 10.5227C12.3864 10.5227 11.7481 10.7008 11.1761 11.0568C10.608 11.4129 10.1553 11.9375 9.81818 12.6307C9.48485 13.3239 9.31818 14.1742 9.31818 15.1818C9.31818 16.1894 9.48485 17.0398 9.81818 17.733C10.1553 18.4261 10.608 18.9508 11.1761 19.3068C11.7481 19.6629 12.3864 19.8409 13.0909 19.8409C13.4773 19.8409 13.8485 19.7879 14.2045 19.6818C14.5606 19.5758 14.8845 19.4186 15.1761 19.2102C15.4716 18.9981 15.7216 18.7386 15.9261 18.4318C16.1345 18.1212 16.2803 17.7652 16.3636 17.3636H17.7727C17.6667 17.9583 17.4735 18.4905 17.1932 18.9602C16.9129 19.4299 16.5644 19.8295 16.1477 20.1591C15.7311 20.4848 15.2633 20.733 14.7443 20.9034C14.2292 21.0739 13.678 21.1591 13.0909 21.1591C12.0985 21.1591 11.2159 20.9167 10.4432 20.4318C9.67045 19.947 9.0625 19.2576 8.61932 18.3636C8.17614 17.4697 7.95455 16.4091 7.95455 15.1818C7.95455 13.9545 8.17614 12.8939 8.61932 12C9.0625 11.1061 9.67045 10.4167 10.4432 9.93182C11.2159 9.44697 12.0985 9.20455 13.0909 9.20455C13.678 9.20455 14.2292 9.28977 14.7443 9.46023C15.2633 9.63068 15.7311 9.88068 16.1477 10.2102C16.5644 10.536 16.9129 10.9337 17.1932 11.4034C17.4735 11.8693 17.6667 12.4015 17.7727 13ZM29.8679 15.1818C29.8679 16.4091 29.6463 17.4697 29.2031 18.3636C28.7599 19.2576 28.152 19.947 27.3793 20.4318C26.6065 20.9167 25.724 21.1591 24.7315 21.1591C23.7391 21.1591 22.8565 20.9167 22.0838 20.4318C21.3111 19.947 20.7031 19.2576 20.2599 18.3636C19.8168 17.4697 19.5952 16.4091 19.5952 15.1818C19.5952 13.9545 19.8168 12.8939 20.2599 12C20.7031 11.1061 21.3111 10.4167 22.0838 9.93182C22.8565 9.44697 23.7391 9.20455 24.7315 9.20455C25.724 9.20455 26.6065 9.44697 27.3793 9.93182C28.152 10.4167 28.7599 11.1061 29.2031 12C29.6463 12.8939 29.8679 13.9545 29.8679 15.1818ZM28.5043 15.1818C28.5043 14.1742 28.3357 13.3239 27.9986 12.6307C27.6652 11.9375 27.2126 11.4129 26.6406 11.0568C26.0724 10.7008 25.4361 10.5227 24.7315 10.5227C24.027 10.5227 23.3887 10.7008 22.8168 11.0568C22.2486 11.4129 21.7959 11.9375 21.4588 12.6307C21.1255 13.3239 20.9588 14.1742 20.9588 15.1818C20.9588 16.1894 21.1255 17.0398 21.4588 17.733C21.7959 18.4261 22.2486 18.9508 22.8168 19.3068C23.3887 19.6629 24.027 19.8409 24.7315 19.8409C25.4361 19.8409 26.0724 19.6629 26.6406 19.3068C27.2126 18.9508 27.6652 18.4261 27.9986 17.733C28.3357 17.0398 28.5043 16.1894 28.5043 15.1818ZM32.2372 9.36364H33.919L37.8736 19.0227H38.0099L41.9645 9.36364H43.6463V21H42.3281V12.1591H42.2145L38.5781 21H37.3054L33.669 12.1591H33.5554V21H32.2372V9.36364ZM46.4716 21V9.36364H50.4034C51.3163 9.36364 52.0625 9.52841 52.642 9.85795C53.2254 10.1837 53.6572 10.625 53.9375 11.1818C54.2178 11.7386 54.358 12.3598 54.358 13.0455C54.358 13.7311 54.2178 14.3542 53.9375 14.9148C53.661 15.4754 53.233 15.9223 52.6534 16.2557C52.0739 16.5852 51.3314 16.75 50.4261 16.75H47.608V15.5H50.3807C51.0057 15.5 51.5076 15.392 51.8864 15.1761C52.2652 14.9602 52.5398 14.6686 52.7102 14.3011C52.8845 13.9299 52.9716 13.5114 52.9716 13.0455C52.9716 12.5795 52.8845 12.1629 52.7102 11.7955C52.5398 11.428 52.2633 11.1402 51.8807 10.9318C51.4981 10.7197 50.9905 10.6136 50.358 10.6136H47.8807V21H46.4716ZM55.9176 21H54.4403L58.7131 9.36364H60.1676L64.4403 21H62.9631L59.4858 11.2045H59.3949L55.9176 21ZM56.4631 16.4545H62.4176V17.7045H56.4631V16.4545ZM75.4801 9.36364V21H74.1165L67.7756 11.8636H67.6619V21H66.2528V9.36364H67.6165L73.9801 18.5227H74.0938V9.36364H75.4801ZM77.2997 9.36364H78.9134L82.1406 14.7955H82.277L85.5043 9.36364H87.1179L82.9134 16.2045V21H81.5043V16.2045L77.2997 9.36364ZM93.4403 21V9.36364H94.8494V19.75H100.259V21H93.4403ZM111.805 15.1818C111.805 16.4091 111.584 17.4697 111.141 18.3636C110.697 19.2576 110.089 19.947 109.317 20.4318C108.544 20.9167 107.661 21.1591 106.669 21.1591C105.677 21.1591 104.794 20.9167 104.021 20.4318C103.249 19.947 102.641 19.2576 102.197 18.3636C101.754 17.4697 101.533 16.4091 101.533 15.1818C101.533 13.9545 101.754 12.8939 102.197 12C102.641 11.1061 103.249 10.4167 104.021 9.93182C104.794 9.44697 105.677 9.20455 106.669 9.20455C107.661 9.20455 108.544 9.44697 109.317 9.93182C110.089 10.4167 110.697 11.1061 111.141 12C111.584 12.8939 111.805 13.9545 111.805 15.1818ZM110.442 15.1818C110.442 14.1742 110.273 13.3239 109.936 12.6307C109.603 11.9375 109.15 11.4129 108.578 11.0568C108.01 10.7008 107.374 10.5227 106.669 10.5227C105.964 10.5227 105.326 10.7008 104.754 11.0568C104.186 11.4129 103.733 11.9375 103.396 12.6307C103.063 13.3239 102.896 14.1742 102.896 15.1818C102.896 16.1894 103.063 17.0398 103.396 17.733C103.733 18.4261 104.186 18.9508 104.754 19.3068C105.326 19.6629 105.964 19.8409 106.669 19.8409C107.374 19.8409 108.01 19.6629 108.578 19.3068C109.15 18.9508 109.603 18.4261 109.936 17.733C110.273 17.0398 110.442 16.1894 110.442 15.1818ZM122.129 13C122.004 12.6174 121.839 12.2746 121.635 11.9716C121.434 11.6648 121.194 11.4034 120.913 11.1875C120.637 10.9716 120.322 10.8068 119.97 10.6932C119.618 10.5795 119.232 10.5227 118.811 10.5227C118.122 10.5227 117.495 10.7008 116.93 11.0568C116.366 11.4129 115.917 11.9375 115.584 12.6307C115.25 13.3239 115.084 14.1742 115.084 15.1818C115.084 16.1894 115.252 17.0398 115.589 17.733C115.927 18.4261 116.383 18.9508 116.959 19.3068C117.535 19.6629 118.182 19.8409 118.902 19.8409C119.569 19.8409 120.156 19.6989 120.663 19.4148C121.175 19.1269 121.572 18.7216 121.857 18.1989C122.144 17.6723 122.288 17.053 122.288 16.3409L122.72 16.4318H119.22V15.1818H123.652V16.4318C123.652 17.3902 123.447 18.2235 123.038 18.9318C122.633 19.6402 122.072 20.1894 121.357 20.5795C120.644 20.9659 119.826 21.1591 118.902 21.1591C117.872 21.1591 116.966 20.9167 116.186 20.4318C115.41 19.947 114.804 19.2576 114.368 18.3636C113.936 17.4697 113.72 16.4091 113.72 15.1818C113.72 14.2614 113.843 13.4337 114.089 12.6989C114.339 11.9602 114.692 11.3314 115.146 10.8125C115.601 10.2936 116.139 9.89583 116.76 9.61932C117.381 9.3428 118.065 9.20455 118.811 9.20455C119.425 9.20455 119.997 9.29735 120.527 9.48295C121.061 9.66477 121.536 9.92424 121.953 10.2614C122.374 10.5947 122.724 10.9943 123.004 11.4602C123.285 11.9223 123.478 12.4356 123.584 13H122.129ZM135.884 15.1818C135.884 16.4091 135.662 17.4697 135.219 18.3636C134.776 19.2576 134.168 19.947 133.395 20.4318C132.622 20.9167 131.74 21.1591 130.747 21.1591C129.755 21.1591 128.872 20.9167 128.099 20.4318C127.327 19.947 126.719 19.2576 126.276 18.3636C125.832 17.4697 125.611 16.4091 125.611 15.1818C125.611 13.9545 125.832 12.8939 126.276 12C126.719 11.1061 127.327 10.4167 128.099 9.93182C128.872 9.44697 129.755 9.20455 130.747 9.20455C131.74 9.20455 132.622 9.44697 133.395 9.93182C134.168 10.4167 134.776 11.1061 135.219 12C135.662 12.8939 135.884 13.9545 135.884 15.1818ZM134.52 15.1818C134.52 14.1742 134.351 13.3239 134.014 12.6307C133.681 11.9375 133.228 11.4129 132.656 11.0568C132.088 10.7008 131.452 10.5227 130.747 10.5227C130.043 10.5227 129.404 10.7008 128.832 11.0568C128.264 11.4129 127.812 11.9375 127.474 12.6307C127.141 13.3239 126.974 14.1742 126.974 15.1818C126.974 16.1894 127.141 17.0398 127.474 17.733C127.812 18.4261 128.264 18.9508 128.832 19.3068C129.404 19.6629 130.043 19.8409 130.747 19.8409C131.452 19.8409 132.088 19.6629 132.656 19.3068C133.228 18.9508 133.681 18.4261 134.014 17.733C134.351 17.0398 134.52 16.1894 134.52 15.1818Z"
                fill="white"
              />
            </svg>
          </a>
          <Rotate
            hideOutline={false}
            toggled={isOpen}
            toggle={setOpen}
            direction="right"
            color="#FFFFFF"
          />
          <div className={arrMenuStyles.join(' ')}>
            <button className=" mb-[20px] md:mb-0 md:mr-[52px]" type="button">
              <svg width="15" height="15" fill="none">
                <path
                  d="M10.3982 5.84809C10.3982 8.04459 8.48774 9.96855 5.94911 9.96855C3.41048 9.96855 1.5 8.04459 1.5 5.84809C1.5 3.6516 3.41048 1.72763 5.94911 1.72763C8.48774 1.72763 10.3982 3.6516 10.3982 5.84809Z"
                  stroke="white"
                  strokeWidth="3"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M13.3857 12.8734L10.1509 9.81732"
                  stroke="white"
                  strokeWidth="3"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </button>
            <div ref={rootEl} className=" relative">
              <button
                onClick={() => setVisibleSelect(true)}
                className=" whitespace-nowrap mb-[20px] md:mb-0"
              >
                <span className=" font-light text-white text-sm leading-8 mr-[15px]">
                  EN
                </span>
                <svg
                  className=" inline-block"
                  width="14"
                  height="12"
                  fill="none"
                >
                  <path
                    d="M7 12L0.0717975 -1.30507e-06L13.9282 -9.36995e-08L7 12Z"
                    fill="white"
                  />
                </svg>
              </button>
              <div className={stylesSelect.join(' ')}>
                <button onClick={() => changeLanguage("en")} className=" mb-1 last-of-type:mb-0 text-brown">
                  EN
                </button>
                <button onClick={() => changeLanguage("fr")} className=" mb-1 last-of-type:mb-0 text-brown">
                  FR
                </button>
                <button onClick={() => changeLanguage("nl")} className=" mb-1 last-of-type:mb-0 text-brown">
                  NL
                </button>
              </div>
            </div>
            <nav className=" md:ml-[60px] flex-col md:flex-row flex items-center flex-wrap">
              {listNavItems.map((item, index) => (
                <a
                  key={index}
                  className="font-light hover:text-brown transition-all text-white text-sm leading-8 uppercase md:mr-[45px] mb-[20px] md:mb-0 last-of-type:mr-[0px]"
                  href="#"
                >
                  {item}
                </a>
              ))}
            </nav>
          </div>
        </div>
      </div>
    </header>
  );
};

export default Header;
